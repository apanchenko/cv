datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider  = "prisma-client-py"
    interface = "asyncio"
    recursive_type_depth = 5
}

model Author {
    id          Int       @id @default(autoincrement())
    name        String    @db.VarChar(255)
    created     DateTime  @default(now())
    addresses   Address[]
    skills      Skill[]
    educations  Education[]
    experiences Experience[]
    @@map("author")
}

model Address {
    id          Int       @id @default(autoincrement())
    author_id   Int
    icon        String    @db.VarChar(255)
    href        String    @db.VarChar(255)
    text        String    @db.VarChar(255)
    author      Author    @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    @@map("address")
}

model Skill {
    id          Int       @id @default(autoincrement())
    name        String    @db.VarChar(255) @unique
    authors     Author[]
    @@map("skill")
}

model Education {
    id          Int       @id @default(autoincrement())
    text        String?   @db.VarChar(255)
    href        String?   @db.VarChar(255)
    link        String?   @db.VarChar(255)
    abbr        String?   @db.VarChar(255)
    year        String?   @db.VarChar(255)
    author_id   Int
    author      Author    @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    @@map("education")
}

model Experience {
    id          Int       @id @default(autoincrement())
    position    String    @db.VarChar(255)
    since       String    @db.VarChar(255)
    till        String    @db.VarChar(255)
    text        String    @db.VarChar(1024)
    link        String    @db.VarChar(255)
    href        String?   @db.VarChar(255)
    tech        String?   @db.VarChar(255)
    author_id   Int
    author      Author    @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    @@map("experience")
}
